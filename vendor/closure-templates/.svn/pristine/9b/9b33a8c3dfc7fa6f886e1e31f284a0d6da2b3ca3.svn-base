<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<TITLE>
MixinParentNode (Soy Complete)
</TITLE>


<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="MixinParentNode (Soy Complete)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../com/google/template/soy/basetree/AbstractReturningNodeVisitor.html" title="class in com.google.template.soy.basetree"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../com/google/template/soy/basetree/Node.html" title="interface in com.google.template.soy.basetree"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?com/google/template/soy/basetree/MixinParentNode.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MixinParentNode.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.google.template.soy.basetree</FONT>
<BR>
Class MixinParentNode&lt;N extends <A HREF="../../../../../com/google/template/soy/basetree/Node.html" title="interface in com.google.template.soy.basetree">Node</A>&gt;</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>com.google.template.soy.basetree.MixinParentNode&lt;N&gt;</B>
</PRE>
<HR>
<DL>
<DT><PRE>public final class <B>MixinParentNode&lt;N extends <A HREF="../../../../../com/google/template/soy/basetree/Node.html" title="interface in com.google.template.soy.basetree">Node</A>&gt;</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
</PRE>

<P>
Mixin implementation of the parent-specific aspect of the ParentNode interface.
 Requires the master to be a ParentNode.

 <p> Important: Do not use outside of Soy code (treat as superpackage-private).

 <p> The parameter N represents the interface or class that is the superclass of all possible
 children for the master ParentNode. E.g. for a Soy parse tree node, N is usually SoyNode, but for
 SoyFileSetNode N is SoyFileNode, for SoyFileNode N is TemplateNode, etc; for a Soy expression
 parse tree, N is usually ExprNode.
<P>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#SPACES">SPACES</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Just spaces.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#MixinParentNode(com.google.template.soy.basetree.MixinParentNode, com.google.template.soy.basetree.ParentNode)">MixinParentNode</A></B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="class in com.google.template.soy.basetree">MixinParentNode</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;orig,
                <A HREF="../../../../../com/google/template/soy/basetree/ParentNode.html" title="interface in com.google.template.soy.basetree">ParentNode</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;newMaster)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copy constructor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#MixinParentNode(com.google.template.soy.basetree.ParentNode)">MixinParentNode</A></B>(<A HREF="../../../../../com/google/template/soy/basetree/ParentNode.html" title="interface in com.google.template.soy.basetree">ParentNode</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;master)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#addChild(int, N)">addChild</A></B>(int&nbsp;index,
         <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the given child at the given index (shifting existing children if necessary).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#addChild(N)">addChild</A></B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the given child.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#addChildren(int, java.util.List)">addChildren</A></B>(int&nbsp;index,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;? extends <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;children)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the given children at the given index (shifting existing children if necessary).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#addChildren(java.util.List)">addChildren</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;? extends <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;children)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the given children.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#appendSourceStringForChildren(java.lang.StringBuilder)">appendSourceStringForChildren</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang">StringBuilder</A>&nbsp;sb)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Appends the source strings for all the children to the given StringBuilder.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#appendTreeStringForChildren(java.lang.StringBuilder, int)">appendTreeStringForChildren</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang">StringBuilder</A>&nbsp;sb,
                            int&nbsp;indent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Appends the tree strings for all the children to the given StringBuilder, at one further
 indentation level (3 spaces) than the given current indentation level.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#clearChildren()">clearChildren</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clears the list of children.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#getChild(int)">getChild</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the child at the given index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#getChildIndex(N)">getChildIndex</A></B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Finds the index of the given child.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#getChildren()">getChildren</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the list of children.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#needsEnvFrameDuringInterp()">needsEnvFrameDuringInterp</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether this node needs an env frame during interpretation, or null if unknown.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#numChildren()">numChildren</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the number of children.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#removeChild(int)">removeChild</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the child at the given index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#removeChild(N)">removeChild</A></B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the given child.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#replaceChild(int, N)">replaceChild</A></B>(int&nbsp;index,
             <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;newChild)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaces the child at the given index with the given new child.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#replaceChild(N, N)">replaceChild</A></B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;currChild,
             <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;newChild)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaces the given current child with the given new child.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#setNeedsEnvFrameDuringInterp(java.lang.Boolean)">setNeedsEnvFrameDuringInterp</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A>&nbsp;needsEnvFrameDuringInterp)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets whether this node needs an env frame when the template is being interpreted.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html#toTreeString(int)">toTreeString</A></B>(int&nbsp;indent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Builds a string that visually shows the subtree rooted at this node (for debugging).</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="SPACES"><!-- --></A><H3>
SPACES</H3>
<PRE>
protected static final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>SPACES</B></PRE>
<DL>
<DD>Just spaces.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.google.template.soy.basetree.MixinParentNode.SPACES">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="MixinParentNode(com.google.template.soy.basetree.ParentNode)"><!-- --></A><H3>
MixinParentNode</H3>
<PRE>
public <B>MixinParentNode</B>(<A HREF="../../../../../com/google/template/soy/basetree/ParentNode.html" title="interface in com.google.template.soy.basetree">ParentNode</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;master)</PRE>
<DL>
<DL>
<DT><B>Parameters:</B><DD><CODE>master</CODE> - The master node that delegates to this instance.</DL>
</DL>
<HR>

<A NAME="MixinParentNode(com.google.template.soy.basetree.MixinParentNode, com.google.template.soy.basetree.ParentNode)"><!-- --></A><H3>
MixinParentNode</H3>
<PRE>
public <B>MixinParentNode</B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="class in com.google.template.soy.basetree">MixinParentNode</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;orig,
                       <A HREF="../../../../../com/google/template/soy/basetree/ParentNode.html" title="interface in com.google.template.soy.basetree">ParentNode</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;newMaster)</PRE>
<DL>
<DD>Copy constructor.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>orig</CODE> - The node to copy.<DD><CODE>newMaster</CODE> - The master node for the copy.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setNeedsEnvFrameDuringInterp(java.lang.Boolean)"><!-- --></A><H3>
setNeedsEnvFrameDuringInterp</H3>
<PRE>
public void <B>setNeedsEnvFrameDuringInterp</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A>&nbsp;needsEnvFrameDuringInterp)</PRE>
<DL>
<DD>Sets whether this node needs an env frame when the template is being interpreted.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>needsEnvFrameDuringInterp</CODE> - Whether this node needs an env frame during interpretation,
     or null if unknown.</DL>
</DD>
</DL>
<HR>

<A NAME="needsEnvFrameDuringInterp()"><!-- --></A><H3>
needsEnvFrameDuringInterp</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A> <B>needsEnvFrameDuringInterp</B>()</PRE>
<DL>
<DD>Returns whether this node needs an env frame during interpretation, or null if unknown.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Whether this node needs an env frame during interpretation, or null if unknown.</DL>
</DD>
</DL>
<HR>

<A NAME="numChildren()"><!-- --></A><H3>
numChildren</H3>
<PRE>
public int <B>numChildren</B>()</PRE>
<DL>
<DD>Gets the number of children.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The number of children.</DL>
</DD>
</DL>
<HR>

<A NAME="getChild(int)"><!-- --></A><H3>
getChild</H3>
<PRE>
public <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A> <B>getChild</B>(int&nbsp;index)</PRE>
<DL>
<DD>Gets the child at the given index.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - The index of the child to get.
<DT><B>Returns:</B><DD>The child at the given index.</DL>
</DD>
</DL>
<HR>

<A NAME="getChildIndex(com.google.template.soy.basetree.Node)"><!-- --></A><A NAME="getChildIndex(N)"><!-- --></A><H3>
getChildIndex</H3>
<PRE>
public int <B>getChildIndex</B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</PRE>
<DL>
<DD>Finds the index of the given child.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>child</CODE> - The child to find the index of.
<DT><B>Returns:</B><DD>The index of the given child, or -1 if the given child is not a child of this node.</DL>
</DD>
</DL>
<HR>

<A NAME="getChildren()"><!-- --></A><H3>
getChildren</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt; <B>getChildren</B>()</PRE>
<DL>
<DD>Gets the list of children.

 Note: The returned list is not a copy. Please do not modify the list directly. Instead, use
 the other methods in this class that are intended for modifying children. Also, if you're
 iterating over the children list as you're modifying it, then you should first make a copy of
 the children list to iterate over, in order to avoid ConcurrentModificationException.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The list of children.</DL>
</DD>
</DL>
<HR>

<A NAME="addChild(com.google.template.soy.basetree.Node)"><!-- --></A><A NAME="addChild(N)"><!-- --></A><H3>
addChild</H3>
<PRE>
public void <B>addChild</B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</PRE>
<DL>
<DD>Adds the given child.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>child</CODE> - The child to add.</DL>
</DD>
</DL>
<HR>

<A NAME="addChild(int,com.google.template.soy.basetree.Node)"><!-- --></A><A NAME="addChild(int, N)"><!-- --></A><H3>
addChild</H3>
<PRE>
public void <B>addChild</B>(int&nbsp;index,
                     <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</PRE>
<DL>
<DD>Adds the given child at the given index (shifting existing children if necessary).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - The index to add the child at.<DD><CODE>child</CODE> - The child to add.</DL>
</DD>
</DL>
<HR>

<A NAME="removeChild(int)"><!-- --></A><H3>
removeChild</H3>
<PRE>
public void <B>removeChild</B>(int&nbsp;index)</PRE>
<DL>
<DD>Removes the child at the given index.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - The index of the child to remove.</DL>
</DD>
</DL>
<HR>

<A NAME="removeChild(com.google.template.soy.basetree.Node)"><!-- --></A><A NAME="removeChild(N)"><!-- --></A><H3>
removeChild</H3>
<PRE>
public void <B>removeChild</B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;child)</PRE>
<DL>
<DD>Removes the given child.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>child</CODE> - The child to remove.</DL>
</DD>
</DL>
<HR>

<A NAME="replaceChild(int,com.google.template.soy.basetree.Node)"><!-- --></A><A NAME="replaceChild(int, N)"><!-- --></A><H3>
replaceChild</H3>
<PRE>
public void <B>replaceChild</B>(int&nbsp;index,
                         <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;newChild)</PRE>
<DL>
<DD>Replaces the child at the given index with the given new child.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - The index of the child to replace.<DD><CODE>newChild</CODE> - The new child.</DL>
</DD>
</DL>
<HR>

<A NAME="replaceChild(com.google.template.soy.basetree.Node,com.google.template.soy.basetree.Node)"><!-- --></A><A NAME="replaceChild(N, N)"><!-- --></A><H3>
replaceChild</H3>
<PRE>
public void <B>replaceChild</B>(<A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;currChild,
                         <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&nbsp;newChild)</PRE>
<DL>
<DD>Replaces the given current child with the given new child.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>currChild</CODE> - The current child to be replaced.<DD><CODE>newChild</CODE> - The new child.</DL>
</DD>
</DL>
<HR>

<A NAME="clearChildren()"><!-- --></A><H3>
clearChildren</H3>
<PRE>
public void <B>clearChildren</B>()</PRE>
<DL>
<DD>Clears the list of children.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addChildren(java.util.List)"><!-- --></A><H3>
addChildren</H3>
<PRE>
public void <B>addChildren</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;? extends <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;children)</PRE>
<DL>
<DD>Adds the given children.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>children</CODE> - The children to add.</DL>
</DD>
</DL>
<HR>

<A NAME="addChildren(int, java.util.List)"><!-- --></A><H3>
addChildren</H3>
<PRE>
public void <B>addChildren</B>(int&nbsp;index,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;? extends <A HREF="../../../../../com/google/template/soy/basetree/MixinParentNode.html" title="type parameter in MixinParentNode">N</A>&gt;&nbsp;children)</PRE>
<DL>
<DD>Adds the given children at the given index (shifting existing children if necessary).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - The index to add the children at.<DD><CODE>children</CODE> - The children to add.</DL>
</DD>
</DL>
<HR>

<A NAME="appendSourceStringForChildren(java.lang.StringBuilder)"><!-- --></A><H3>
appendSourceStringForChildren</H3>
<PRE>
public void <B>appendSourceStringForChildren</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang">StringBuilder</A>&nbsp;sb)</PRE>
<DL>
<DD>Appends the source strings for all the children to the given StringBuilder.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sb</CODE> - The StringBuilder to which to append the children's source strings.</DL>
</DD>
</DL>
<HR>

<A NAME="appendTreeStringForChildren(java.lang.StringBuilder, int)"><!-- --></A><H3>
appendTreeStringForChildren</H3>
<PRE>
public void <B>appendTreeStringForChildren</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang">StringBuilder</A>&nbsp;sb,
                                        int&nbsp;indent)</PRE>
<DL>
<DD>Appends the tree strings for all the children to the given StringBuilder, at one further
 indentation level (3 spaces) than the given current indentation level.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sb</CODE> - The StringBuilder to which to append the children's tree strings.<DD><CODE>indent</CODE> - The current indentation level of this parent node.</DL>
</DD>
</DL>
<HR>

<A NAME="toTreeString(int)"><!-- --></A><H3>
toTreeString</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toTreeString</B>(int&nbsp;indent)</PRE>
<DL>
<DD>Builds a string that visually shows the subtree rooted at this node (for debugging).
 Each line of the string will be indented by the given indentation amount. You should pass an
 indentation of 0 unless this method is being called as part of building a larger tree string.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>indent</CODE> - The indentation for each line of the tree string (usually pass 0).
<DT><B>Returns:</B><DD>A string that visually shows the subtree rooted at this node.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../com/google/template/soy/basetree/AbstractReturningNodeVisitor.html" title="class in com.google.template.soy.basetree"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../com/google/template/soy/basetree/Node.html" title="interface in com.google.template.soy.basetree"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?com/google/template/soy/basetree/MixinParentNode.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MixinParentNode.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

        
          <div id="footer">
            <div id="footerlogo" style="float:left">
              <img src="http://www.google.com/images/art.gif"
                   alt="Google colored balls">
            </div>
            <div id="copyright" style="float:left">
              <p>
                &copy; 2009 Google -
                <a href="http://www.google.com/privacy.html">Privacy Policy</a> -
                <a href="http://www.google.com/terms_of_service.html">Terms and Conditions</a> -
                <a href="http://www.google.com/about.html">About Google</a>
              </p>
            </div>
          </div>
        
      
</BODY>
</HTML>
